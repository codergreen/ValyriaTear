Valyria Tear


Copyright (C) 2012-2013 by Bertram
Copyright (C) 2004-2011 by The Allacrost Project

This code is licensed under the GNU GPL. It is free software and you may
modify it and/or redistribute it under the terms of this license.
See http://www.gnu.org/copyleft/gpl.html for details.

Valyria Tear is an attempt at creating a small J-RPG using an upgraded HoA engine (See http://www.allacrost.org/).

Development blog: http://valyriatear.blogspot.com

Linux compilation procedure:
Once you've unpacked the tarball or checked it out of Git, just run 'cmake . && make ' from the top-level directory at the prompt.

You'll then be able to play by typing: 'src/valyriatear'

Windows:
A Code::Blocks project file is also provided when compiling under Windows.
In that case, you might need the dependencies and headers files that can be downloaded at:
https://dl.dropbox.com/s/et9x2e73r6etbta/valyriatear-win32-depends-2012.08.30.zip?dl=1

Game directories included and used are:
dat/ img/ mus/ snd/ src/ po/

Library dependencies (you will need the following in order to compile and run the game):
Boost headers (Tested from 1.48 to 1.50) (make sure that the boost headers used to compile Luabind are the same version used to compile Valyria Tear)
GNU Gettext - (libiconv, libintl)
lua (5.1.x - 5.2.x) - (liblua)
Luabind 0.9.1 (Provided as a static library)
libz
libjpeg (6.2 to 8)
libpng (1.2 to 1.5)
Ogg/Vorbis - (libogg, libvorbis, libvorbisenc, libvorbisfile)
OpenAL
OpenGL and GLU
SDL (1.2)
SDL_ttf (1.2)
SDL_image (1.2)
and:
Qt 4.8.x (only if you wish to compile the map editor)

Compiling with editor or debug feature support:

Using Cmake:
Use the -D parameter when invoking cmake to add compilation flags.

Add Editor compilation (Requires QT 4.8.x headers)
cmake -DEDITOR_SUPPORT=on .

Add debug menus, and debug commands:
cmake -DDEBUG_FEATURES=on .

Add both:
cmake -DDEBUG_FEATURES=on -DEDITOR_SUPPORT=on .

On Code::Blocks:
Got to Project->Build options, and add the flags in the #defines tab, i.e.:
DEBUG_MENU

Note that the editor can't be built using C::B. Use Qt-Creator and the MapEditor.pro file for that.
Be sure also to read the instructions within that file, as RTTI support must be enabled, and unicode disabled
in the compile flags.
